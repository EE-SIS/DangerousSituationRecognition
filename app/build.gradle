plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.dangeroussituationrecognition"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }



    flavorDimensions "tfliteInference"
    productFlavors {
        // The TFLite inference is built using the TFLite Java API.
        interpreter {
            dimension "tfliteInference"
        }
        // The TFLite inference is built using the TFLite Task library.
        taskApi {
            dimension "tfliteInference"
        }
    }
}


//repositories{
//    flatDir {
//        dirs 'libs'
//    }
//}

// import DownloadModels task
project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'
project.ext.TMP_DIR   = project.buildDir.toString() + '/downloads'

// Download default models; if you wish to use your own models then
// place them in the "assets" directory and comment out this line.
// apply from:'download_model.gradle'


dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    interpreterImplementation project(":lib_interpreter")
    taskApiImplementation project(":lib_task_api")


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'com.google.truth:truth:1.0.1'

    // TEMI SDK
    //implementation fileTree(dir: 'libs', include: ['*.aar'])
    //implementation 'com.robotemi:sdk:0.10.76'
    //implementation(name: 'sdk-0.10.76', ext: 'aar')

    // Camera X
    def camerax_version = "1.0.0-alpha04"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"

    //TensorFlow Lite AAR in JCenter
    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
}